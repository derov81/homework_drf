{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\PycharmProjects\\\\DjangoStudy\\\\homework_drf\\\\homeprojectdrf\\\\frontend\\\\src\\\\components\\\\Cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AuthService from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [loadingCart, setLoadingCart] = useState(false);\n  const fetchCart = async () => {\n    const token = localStorage.getItem(\"token\");\n    const user = AuthService.getCurrentUser();\n    if (!token || !user) {\n      setCartItems([]);\n      setTotalQuantity(0);\n      return;\n    }\n    try {\n      setLoadingCart(true);\n      const response = await axios.get(\"http://127.0.0.1:8000/api/cart/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = response.data;\n      if (!Array.isArray(data.items)) {\n        console.error(\"Ошибка: поле 'items' не массив:\", data);\n        return;\n      }\n      setCartItems(data.items);\n      const total = data.items.reduce((sum, item) => sum + item.quantity, 0);\n      setTotalQuantity(total);\n    } catch (error) {\n      console.error(\"Ошибка при загрузке корзины:\", error);\n      setCartItems([]);\n      setTotalQuantity(0);\n    } finally {\n      setLoadingCart(false);\n    }\n  };\n  const addToCart = async (productId, quantity = 1) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.warn(\"Нет токена, пользователь не авторизован\");\n      return;\n    }\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/cart/\", {\n        product_id: productId,\n        quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      fetchCart();\n    } catch (error) {\n      console.error(\"Ошибка при добавлении в корзину:\", error);\n    }\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    setTotalQuantity(0);\n  };\n\n  // Загрузка корзины только при инициализации, если пользователь авторизован\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    const token = localStorage.getItem(\"token\");\n    if (user && token) {\n      fetchCart();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      totalQuantity,\n      fetchCart,\n      addToCart,\n      clearCart,\n      setCartItems,\n      loadingCart,\n      setTotalQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"xSCYW6QcVO9t5Ol7DfW/9o4XQ5g=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","AuthService","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","totalQuantity","setTotalQuantity","loadingCart","setLoadingCart","fetchCart","token","localStorage","getItem","user","getCurrentUser","response","get","headers","Authorization","data","Array","isArray","items","console","error","total","reduce","sum","item","quantity","addToCart","productId","warn","post","product_id","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/Samsung/PycharmProjects/DjangoStudy/homework_drf/homeprojectdrf/frontend/src/components/Cart/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [loadingCart, setLoadingCart] = useState(false);\r\n\r\n  const fetchCart = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (!token || !user) {\r\n      setCartItems([]);\r\n      setTotalQuantity(0);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoadingCart(true);\r\n      const response = await axios.get(\"http://127.0.0.1:8000/api/cart/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const data = response.data;\r\n\r\n      if (!Array.isArray(data.items)) {\r\n        console.error(\"Ошибка: поле 'items' не массив:\", data);\r\n        return;\r\n      }\r\n\r\n      setCartItems(data.items);\r\n\r\n      const total = data.items.reduce((sum, item) => sum + item.quantity, 0);\r\n      setTotalQuantity(total);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при загрузке корзины:\", error);\r\n      setCartItems([]);\r\n      setTotalQuantity(0);\r\n    } finally {\r\n      setLoadingCart(false);\r\n    }\r\n  };\r\n\r\n  const addToCart = async (productId, quantity = 1) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!token) {\r\n      console.warn(\"Нет токена, пользователь не авторизован\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        \"http://127.0.0.1:8000/api/cart/\",\r\n        {\r\n          product_id: productId,\r\n          quantity,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      fetchCart();\r\n    } catch (error) {\r\n      console.error(\"Ошибка при добавлении в корзину:\", error);\r\n    }\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n    setTotalQuantity(0);\r\n  };\r\n\r\n  // Загрузка корзины только при инициализации, если пользователь авторизован\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (user && token) {\r\n      fetchCart();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems,\r\n        totalQuantity,\r\n        fetchCart,\r\n        addToCart,\r\n        clearCart,\r\n        setCartItems,\r\n        loadingCart,\r\n        setTotalQuantity,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}