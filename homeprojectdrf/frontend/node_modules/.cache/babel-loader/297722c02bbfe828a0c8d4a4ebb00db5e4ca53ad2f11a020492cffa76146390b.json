{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api/';\nclass AuthService {\n  async login(username, password) {\n    try {\n      const response = await axios.post(`${API_URL}token/`, {\n        username,\n        password\n      });\n      if (response.data.access) {\n        const userData = {\n          username,\n          access: response.data.access,\n          refresh: response.data.refresh\n        };\n        localStorage.setItem('user', JSON.stringify(userData));\n        // Устанавливаем токен для всех будущих запросов\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + response.data.access;\n        return userData;\n      }\n      throw new Error('Не удалось получить токен');\n    } catch (error) {\n      var _error$response;\n      console.error('Ошибка при входе:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  }\n  async register(username, password, email) {\n    try {\n      const response = await axios.post(`${API_URL}register/`, {\n        username,\n        password,\n        email\n      });\n\n      // После успешной регистрации — сразу логинимся\n      return this.login(username, password);\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3;\n      // Если пользователь уже есть, тоже пытаемся логин\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.detail && error.response.data.detail.includes('уже существует')) {\n        return this.login(username, password);\n      }\n      console.error('Ошибка при регистрации:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  }\n  logout() {\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","response","post","data","access","userData","refresh","localStorage","setItem","JSON","stringify","defaults","headers","common","Error","error","_error$response","console","message","register","email","_error$response2","_error$response2$data","_error$response3","detail","includes","logout","removeItem","getCurrentUser","parse","getItem"],"sources":["C:/Users/Samsung/PycharmProjects/DjangoStudy/homework_drf/homeprojectdrf/frontend/src/components/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/';\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}token/`, {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      if (response.data.access) {\r\n        const userData = {\r\n          username,\r\n          access: response.data.access,\r\n          refresh: response.data.refresh,\r\n        };\r\n\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        // Устанавливаем токен для всех будущих запросов\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + response.data.access;\r\n\r\n        return userData;\r\n      }\r\n      throw new Error('Не удалось получить токен');\r\n    } catch (error) {\r\n      console.error('Ошибка при входе:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(username, password, email) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}register/`, {\r\n        username,\r\n        password,\r\n        email,\r\n      });\r\n\r\n\r\n      // После успешной регистрации — сразу логинимся\r\n      return this.login(username, password);\r\n    } catch (error) {\r\n      // Если пользователь уже есть, тоже пытаемся логин\r\n      if (\r\n        error.response?.data?.detail &&\r\n        error.response.data.detail.includes('уже существует')\r\n      ) {\r\n        return this.login(username, password);\r\n      }\r\n\r\n      console.error('Ошибка при регистрации:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,QAAQ,EAAE;QACpDG,QAAQ;QACRC;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAE;QACxB,MAAMC,QAAQ,GAAG;UACfN,QAAQ;UACRK,MAAM,EAAEH,QAAQ,CAACE,IAAI,CAACC,MAAM;UAC5BE,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACG;QACzB,CAAC;QAEDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;QACtD;QACAV,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGZ,QAAQ,CAACE,IAAI,CAACC,MAAM;QAEjF,OAAOC,QAAQ;MACjB;MACA,MAAM,IAAIS,KAAK,CAAC,2BAA2B,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,mBAAmB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACd,QAAQ,cAAAe,eAAA,uBAAdA,eAAA,CAAgBb,IAAI,KAAIY,KAAK,CAACG,OAAO,CAAC;MACzE,MAAMH,KAAK;IACb;EACF;EAEA,MAAMI,QAAQA,CAACpB,QAAQ,EAAEC,QAAQ,EAAEoB,KAAK,EAAE;IACxC,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,WAAW,EAAE;QACvDG,QAAQ;QACRC,QAAQ;QACRoB;MACF,CAAC,CAAC;;MAGF;MACA,OAAO,IAAI,CAACtB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACvC,CAAC,CAAC,OAAOe,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MACd;MACA,IACE,CAAAF,gBAAA,GAAAN,KAAK,CAACd,QAAQ,cAAAoB,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlB,IAAI,cAAAmB,qBAAA,eAApBA,qBAAA,CAAsBE,MAAM,IAC5BT,KAAK,CAACd,QAAQ,CAACE,IAAI,CAACqB,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EACrD;QACA,OAAO,IAAI,CAAC3B,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MACvC;MAEAiB,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACd,QAAQ,cAAAsB,gBAAA,uBAAdA,gBAAA,CAAgBpB,IAAI,KAAIY,KAAK,CAACG,OAAO,CAAC;MAC/E,MAAMH,KAAK;IACb;EACF;EAEAW,MAAMA,CAAA,EAAG;IACPnB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;IAC/B,OAAOhC,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;EAEAe,cAAcA,CAAA,EAAG;IACf,OAAOnB,IAAI,CAACoB,KAAK,CAACtB,YAAY,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;AACF;AAEA,eAAe,IAAIjC,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}